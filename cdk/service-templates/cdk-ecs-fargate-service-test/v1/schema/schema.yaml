schema:
  format:
    openapi: "3.0.0"
  service_input_type: "ECSFargateSvcInputs"
  pipeline_input_type: "PipelineInputs"
  types:
    ECSFargateSvcInputs:
      type: object
      description: "Input properties for a loadbalanced Fargate service"
      properties:
        port:
          title: "Container port"
          type: number
          description: "The container port to route traffic to"
          default: 80
          minimum: 0
          maximum: 65535
        desired_count:
          title: "Desired count"
          type: number
          description: "The default number of Fargate tasks you want running"
          default: 1
          minimum: 1
        task_size:
          title: "Task size"
          type: string
          description: "The size of the task you want to run"
          enum: ["x-small", "small", "medium", "large", "x-large"]
          default: "x-small"
        image:
          title: "Container image URI"
          type: string
          description: "The name/url of the container image"
          default: "public.ecr.aws/nginx/nginx:stable"
          minLength: 1
          maxLength: 200
        service_discovery_name:
          title: "Service discovery name"
          type: string
          description: "The name of the service to register in service discovery"
          minLength: 3
          maxLength: 24
        load_balanced:
          title: "Enable Application Load Balancing"
          type: boolean
          description: "If enabled, Application Load Balancer will get created and point to the default port of the container"
          default: false
        load_balanced_public:
          title: "Public Facing LB"
          type: boolean
          description: "This determines where the load balancer is placed in the network - internet facing or private to the vpc"
          default: public
        env_vars:
          title: "Environment variables"
          description: "Example: ENV_VAR_1=VALUE"
          type: array
          example:
            - "ENV_VAR1=TEST1"
            - "ENV_VAR2=TEST2"
          items:
            type: string
    PipelineInputs:
      type: object
      description: "Pipeline input properties"
      properties:
        dockerfile:
          title: "Dockerfile"
          type: string
          description: "The location of the Dockerfile to build"
          default: "Dockerfile"
          minLength: 1
          maxLength: 100
        unit_test_command:
          title: "Unit test command"
          type: string
          description: "The command to run to unit test the application code"
          default: "echo 'add your unit test command here'"
          minLength: 1
          maxLength: 200
        gitRepo:
          title: "Git repository"
          type: string
          description: "For GitHub, provide url. For CodeCommit, provide repo name"
          minLength: 1
          maxLength: 200
        buildBranch:
          title: "Build branch"
          type: string
          description: "The branch to build"
          default: "main"
          minLength: 1
          maxLength: 30
        repoProvider:
          title: "Repository provider"
          type: string
          description: "The repository provider"
          enum: ["github", "codecommit"]
          default: "github"
        deploymentWave:
          title: "Deployment wave"
          type: string
          description: "The deployment wave for this deployment to run in parallel"
          enum: ["dev", "uat", "prod1", "prod2"]
          default: "dev"
